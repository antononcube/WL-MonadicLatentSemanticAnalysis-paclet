(* ::Package:: *)

PacletObject[
  <|
    "Name" -> "AntonAntonov/MonadicLatentSemanticAnalysis",
    "Description" -> "Software monad for Latent semantic analysis",
    "Creator" -> "Anton Antonov",
    "License" -> "Artistic-2.0",
    "PublisherID" -> "AntonAntonov",
    "Version" -> "1.0.0",
    "WolframVersion" -> "12.1+",
    "Extensions" -> {
      {
        "Kernel",
        "Root" -> "Kernel",
        "Context" -> {
          "AntonAntonov`MonadicLatentSemanticAnalysis`"
        },
        "Symbols" -> {
          "AntonAntonov`MonadicLatentSemanticAnalysis`$LSAMonFailure",
          "AntonAntonov`MonadicLatentSemanticAnalysis`ApplyGlobalTermFunction",
          "AntonAntonov`MonadicLatentSemanticAnalysis`ApplyLocalTermFunction",
          "AntonAntonov`MonadicLatentSemanticAnalysis`ApplyNormalizationFunction",
          "AntonAntonov`MonadicLatentSemanticAnalysis`DocumentTermMatrix",
          "AntonAntonov`MonadicLatentSemanticAnalysis`DocumentTermSSparseMatrix",
          "AntonAntonov`MonadicLatentSemanticAnalysis`FindMostImportantSentences",
          "AntonAntonov`MonadicLatentSemanticAnalysis`GlobalTermFunctionWeights",
          "AntonAntonov`MonadicLatentSemanticAnalysis`GlobalTermWeight",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMon",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonAddToContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonApplyTermWeightFunctions",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonAssignContextTo",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonAssignTo",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonAssignValueTo",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonBind",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonContexts",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonDocumentCollectionQ",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonDropFromContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEcho",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoDocumentsStatistics",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoDocumentTermMatrixStatistics",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoFunctionContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoFunctionValue",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoStatisticalThesaurus",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoStatisticalThesaurusTable",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoTopicsTable",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonEchoValue",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonExtractStatisticalThesaurus",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonExtractTopics",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonFail",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonFindMostImportantDocuments",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonFold",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonGetDocuments",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonIf",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonIfElse",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonImportFromDirectory",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonInterpretBasisVector",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonIterate",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonMakeBipartiteGraphMatrix",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonMakeDocumentTermMatrix",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonMakeGraph",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonMakeTopicsTable",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonModifyContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonModule",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonNest",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonNestWhile",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonNormalizeMatrixProduct",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonOption",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonPutContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonPutValue",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonRepresentByTerms",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonRepresentByTopics",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonRepresentDocumentTagsByTopics",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonRetrieveFromContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonSetContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonSetValue",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonSucceed",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonTakeContext",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonTakeMatrix",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonTakeTexts",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonTakeValue",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonTakeWeightedMatrix",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonUnit",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonUnitQ",
          "AntonAntonov`MonadicLatentSemanticAnalysis`LSAMonWhen",
          "AntonAntonov`MonadicLatentSemanticAnalysis`ToBagOfWords",
          "AntonAntonov`MonadicLatentSemanticAnalysis`WeightTerms",
          "AntonAntonov`MonadicLatentSemanticAnalysis`WeightTermsOfSSparseMatrix"
        }
      },
      {
        "Documentation",
        "Root" -> "Documentation",
        "Language" -> "English"
      }
    },
    "PrimaryContext" -> "AntonAntonov`MonadicLatentSemanticAnalysis`"
  |>
]
